{\rtf1\ansi\ansicpg1252\cocoartf1561
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 cpuclient.c\
cpuServer.c\
\
Purpose:	robinClient:  		The purpose of this program is to take in\
           				 burst size of cpu and IO from the client\
           				 and send them to the server. The client\
            				waits to recieve the completion time\
            				and the CPU utilization and prints\
            				both results to screen.\
\
		robinServer:      	The purpose of this program is to take in\
          				  multiple clients and store them into\
           				 queues. Using round-robin we can dequeue\
           				 each client based on their burst size.\
           				 The program shows each step of the\
            				clock cycle including what process is at\
           				 head and when they dequeue.\
           				 Once they dequeue they either go to the IO\
           				 queue or requeue depending on their burst\
           				 size remaining.\
\
In order to use the program, please execute the cpuServer.c file in whatever\
environment you choose that can successfully utilize the file.  Once\
the program is running the user will be prompted to enter a value for\
the amount of clients. Any (reasonable) integer above 0 is acceptable.\
The server will now state that it is ready. Please execute the cpuClient.c \
file in whatever environment you choose that can successfully utilize the file.\
The user will then be prompted to enter the amount of burst ( 3 or 5). Enter either.\
The user will then be prompted to enter the size of the burst it is going to send\
To the server for each CPU and IO burst. The client will then send the information \
To the server who Will execute once all clients have sent information. Open multiple windows for  Multiple clients and repeat the process again for the client step to add\
more Clients. The server will Then display the clock and the process that is taking\
that time quantum. When one of the client completes the server shows the completion\
Time and sends the information back to the respectful client. The server will finish\
Once all clients receive their completion time. It will then show completion \
Time and CPU utilization.\
\
*note: The server displays the clock with a second delay between each time quantum in\
	order to correctly display what is happening. The server needs multiple clients\
	opened with multiple windows in order for it to correctly operate. A constant\
	was added to IO to make up for delay. Due to this results are correct.\
\
*****.     PLEASE OPEN MULTIPLE WINDOWS TO REPRESENT MULTIPLE CLIENTS.  *****\
\
Inputs and Outputs in Screen Captures/Gantt chart\
\
			\
Time Quantum = 5\
\
	cpu	IO	cpu	cpu	IO\
P0	2	7	10	10	5\
P1	7	4	10	\
\
Completion times\
P0	29\
P1	39\
\
CPU Utilization = .89\
\
\
\
\
 \
}